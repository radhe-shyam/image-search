{"version":3,"sources":["component/SearchBar.js","component/ImageList.js","api/unsplash.js","app.js","index.js"],"names":["SearchBar","onSubmit","isLoading","useState","term","setTerm","onFormSubmit","event","preventDefault","className","type","disabled","onChange","target","value","placeholder","onClick","ImageList","imageList","map","image","href","urls","raw","rel","alt","alt_description","src","regular","id","Unsplash","axios","create","baseURL","headers","App","providerRef","useRef","setImageList","nextPage","setNextPage","searchTerm","setSearchTerm","setIsLoading","totalPage","setTotalPage","onSearchSubmit","a","updateImageList","page","get","params","query","per_page","response","data","total_pages","newImageList","results","i","concat","length","current","enqueueSnackbar","variant","toString","console","log","preventDuplicate","ref","anchorOrigin","vertical","horizontal","action","key","closeSnackbar","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02c5d501.chunk.js","sourcesContent":["import { useState } from 'react';\nconst SearchBar = ({ onSubmit, isLoading }) => {\n    const [term, setTerm] = useState('');\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        onSubmit(term);\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        setTerm(event.target.value);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onFormSubmit}>\n                <div className=\"ui icon input fluid\">\n                    <input type=\"text\" disabled={isLoading} onChange={onChange} value={term} placeholder=\"Search images...\" />\n                    <i className={`circular search link icon ${isLoading ? 'loading' : ''}`} onClick={onFormSubmit}></i>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default SearchBar;","import React from 'react';\nimport './ImageList.css';\nconst ImageList = ({ imageList }) => {\n    return (\n        <ul>\n            {imageList.map(image => {\n                return (\n                    <li key={image.id}>\n                        <a target=\"_blank\" href={image.urls.raw} rel=\"noreferrer\">\n                            <img alt={image.alt_description} src={image.urls.regular} />\n                        </a>\n                    </li>\n                );\n            })\n            }\n        </ul>\n    );\n};\n\nexport default ImageList;","import axios from 'axios';\n\nconst Unsplash = axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        'Authorization': 'Client-ID qdZs934i7SfOnborj_6lutXg_d00yAHxdwsQkoqcqzI'\n    }\n});\n\nexport default Unsplash;","import SearchBar from './component/SearchBar';\nimport ImageList from './component/ImageList';\nimport Unsplash from './api/unsplash';\nimport { SnackbarProvider } from 'notistack';\nimport { useState, useRef } from 'react';\n\n\n\nconst App = () => {\n    const providerRef = useRef();\n    const [imageList, setImageList] = useState([]),\n        [nextPage, setNextPage] = useState(1),\n        [searchTerm, setSearchTerm] = useState(''),\n        [isLoading, setIsLoading] = useState(false),\n        [totalPage, setTotalPage] = useState(0);\n    const onSearchSubmit = async (value) => {\n        setNextPage(1);\n        setSearchTerm(value);\n        await updateImageList(value, 1);\n    };\n    const updateImageList = async (term, page) => {\n        if (isLoading) return;\n        setIsLoading(true);\n        try {\n            const response = await Unsplash.get('/search/photos', {\n                params: {\n                    query: term,\n                    per_page: 30,\n                    page: page\n                }\n            });\n            setNextPage(page + 1);\n            setTotalPage(response.data.total_pages);\n            const newImageList = response.data.results.map(i => ({\n                urls: i.urls,\n                id: i.id,\n                alt_description: i.alt_description\n            }));\n            setImageList(page === 1 ? newImageList : imageList.concat(newImageList));\n            if (newImageList.length === 0) {\n                providerRef.current.enqueueSnackbar('We can\\'t find any images.', {\n                    variant: 'warning'\n                });\n            }\n        } catch (e) {\n            providerRef.current.enqueueSnackbar(`Something went wrong - ${e.toString()}`, {\n                variant: 'error'\n            });\n            console.log(e);\n        }\n        setIsLoading(false);\n    }\n    return (\n        <SnackbarProvider preventDuplicate ref={providerRef} anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }} \n        action={(key) => (<button className=\"ui icon circular basic mini button\" onClick={()=>providerRef.current.closeSnackbar()}>\n                <i className=\"close icon\"></i>\n            </button>)}\n        >\n            <div className=\"container ui\">\n                <SearchBar onSubmit={onSearchSubmit} isLoading={isLoading} />\n            </div>\n            <ImageList imageList={imageList} />\n            {\n                totalPage >= nextPage\n                    ? <button className={`fluid ui button ${isLoading ? 'loading' : ''}`} onClick={() => updateImageList(searchTerm, nextPage)}>Load more..</button>\n                    : null\n            }\n        </SnackbarProvider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './app';\n\nReactDom.render(\n    <React.StrictMode><App /></React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}